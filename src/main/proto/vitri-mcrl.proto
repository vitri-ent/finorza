syntax = "proto3";

import "google/protobuf/empty.proto";

option java_package = "io.pyke.vitri.finorza.inference.proto";

message Camera {
	double dx = 1;
	double dy = 2;
}

message MouseWheel {
	double delta = 1;
}

enum MouseButton {
	Attack = 0;
	Use = 1;
	PickItem = 2;
}

message MouseState {
	Camera camera = 1;
	repeated MouseButton button = 3;
}

enum Key {
	Forward = 0;
	Back = 1;
	Left = 2;
	Right = 3;
	Jump = 4;
	Sprint = 5;
	Sneak = 6;
	Hotbar1 = 7;
	Hotbar2 = 8;
	Hotbar3 = 9;
	Hotbar4 = 10;
	Hotbar5 = 11;
	Hotbar6 = 12;
	Hotbar7 = 13;
	Hotbar8 = 14;
	Hotbar9 = 15;
	Inventory = 16;
	Drop = 17;
	SwapHands = 18;
	Esc = 19;
}

message KeyboardState {
	repeated Key key = 1;
}

message ActRequest {
	MouseState mouse = 1;
	KeyboardState keys = 2;
}

message ClientObservation {
	optional bytes observation = 1;
	bool done = 2;
	bool isGuiOpen = 3;
	bool isPaused = 4;
}

message SingleplayerWorld {
	string id = 1;
	string name = 2;
	bytes icon = 3;
}

message SingleplayerWorlds {
	repeated SingleplayerWorld worlds = 1;
}

message EnterSingleplayerWorldRequest {
	string id = 1;
}

message EnterMultiplayerServerRequest {
	string addr = 1;
}

message SetHumanControlRequest {
	bool enable = 1;
}

service RemoteControlService {
	rpc listSingleplayerWorlds(google.protobuf.Empty) returns (SingleplayerWorlds) {}
	rpc enterSingleplayerWorld(EnterSingleplayerWorldRequest) returns (google.protobuf.Empty) {}
	rpc enterMultiplayerServer(EnterMultiplayerServerRequest) returns (google.protobuf.Empty) {}

	rpc setHumanControl(SetHumanControlRequest) returns (google.protobuf.Empty) {}

	rpc observe(google.protobuf.Empty) returns (ClientObservation) {}
	rpc act(ActRequest) returns (google.protobuf.Empty) {}
}
